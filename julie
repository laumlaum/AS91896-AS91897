
import tkinter as tk
from tkinter import ttk

items_out = {}


def add_item():
    customer_name = customer_name_entry.get()
    receipt_number = receipt_number_entry.get()
    item_name = item_name_entry.get()
    item_count = item_count_entry.get()

    if not customer_name or not receipt_number or not item_name or not item_count:
        status_label.config(text="Please fill in all fields.")
        return

    customer_name = customer_name_entry.get()
    if not customer_name.isalpha():
        status_label.config(text="Invalid input. Please enter a valid customer name.")
        return

    item_name = item_name_entry.get()
    if not item_name.isalpha():
        status_label.config(text="Invalid input. Please enter a valid item name.")
        return

        if not receipt_number.isdigit():status_label.config(text="Receipt number should be an integer.")
        return

    item_count = int(item_count)
    if not 1 <= item_count <= 500:
        status_label.config(text="Invalid input. Please enter a number between 1 and 500 for item count.")
        return

    receipt_number = int(receipt_number)
    items_out[receipt_number] = {'customer_name': customer_name, 'item_name': item_name, 'item_count': item_count}
    status_label.config(text=f"{item_count} {item_name}(s) added to items out list for {customer_name}. Receipt number is {receipt_number}.")
    update_treeviews()


def remove_item():
    receipt_number = receipt_number_entry.get()
    if receipt_number in items_out:
        item_name = items_out[receipt_number]['item_name']
        customer_name = items_out[receipt_number]['customer_name']
        item_count = items_out[receipt_number]['item_count']
        del items_out[receipt_number]
        status_label.config(text=f"{item_count} {item_name}(s) returned by {customer_name}. Receipt number {receipt_number} removed from items out list.")
        update_treeviews()
    else:
        status_label.config(text="Receipt number not found in items out list.")

def update_treeviews():
    for child in items_out_treeview.get_children():
        items_out_treeview.delete(child)
    for child in item_counts_treeview.get_children():
        item_counts_treeview.delete(child)
    for receipt_number, item_data in items_out.items():
        customer_name = item_data['customer_name']
        item_name = item_data['item_name']
        item_count = item_data['item_count']
        items_out_treeview.insert("", tk.END, values=(receipt_number, customer_name, item_name))
        item_counts_treeview.insert("", tk.END, values=(receipt_number, item_count))

root = tk.Tk()
root.title("Party Hire Store")

customer_name_label = tk.Label(root, text="Customer full name:")
customer_name_label.grid(row=0, column=0, padx=5, pady=5)
customer_name_entry = tk.Entry(root)
customer_name_entry.grid(row=0, column=1, padx=5, pady=5)

receipt_number_label = tk.Label(root, text="Receipt number:")
receipt_number_label.grid(row=1, column=0, padx=5, pady=5)
receipt_number_entry = tk.Entry(root)
receipt_number_entry.grid(row=1, column=1, padx=5, pady=5)

item_name_label = tk.Label(root, text="Item that is hired:")
item_name_label.grid(row=2, column=0, padx=5, pady=5)
item_name_entry = tk.Entry(root)
item_name_entry.grid(row=2, column=1, padx=5, pady=5)


customer_name_label = tk.Label(root, text="Customer full name:")
customer_name_label.grid(row=0, column=0, padx=5, pady=5)
customer_name_entry = tk.Entry(root)
customer_name_entry.grid(row=0, column=1, padx=5, pady=5)

receipt_number_label = tk.Label(root, text="Receipt number:")
receipt_number_label.grid(row=1, column=0, padx=5, pady=5)
receipt_number_entry = tk.Entry(root)
receipt_number_entry.grid(row=1, column=1, padx=5, pady=5)

item_name_label = tk.Label(root, text="Item that is hired:")
item_name_label.grid(row=2, column=0, padx=5, pady=5)
item_name_entry = tk.Entry(root)
item_name_entry.grid(row=2, column=1, padx=5, pady=5)

item_count_label = tk.Label(root, text="Item count:")
item_count_label.grid(row=3, column=0, padx=5, pady=5)
item_count_entry = tk.Entry(root)
item_count_entry.grid(row=3, column=1, padx=5, pady=5)

add_button = tk.Button(root, text="Add item", command=add_item)
add_button.grid(row=4, column=0, padx=5, pady=5)

remove_button = tk.Button(root, text="Remove item", command=remove_item)
remove_button.grid(row=4, column=1, padx=5, pady=5)

status_label = tk.Label(root, text="")
status_label.grid(row=5, column=0, columnspan=2, padx=5, pady=5)

items_out_frame = tk.Frame(root)
items_out_frame.grid(row=6, column=0, columnspan=2, padx=5, pady=5)

items_out_treeview = ttk.Treeview(items_out_frame, columns=("receipt_number", "customer_name", "item_name"), show="headings")
items_out_treeview.heading("receipt_number", text="Receipt number")
items_out_treeview.heading("customer_name", text="Customer name")
items_out_treeview.heading("item_name", text="Item name")
items_out_treeview.pack(side="left", fill="both", expand=True)

item_counts_frame = tk.Frame(root)
item_counts_frame.grid(row=7, column=0, columnspan=2, padx=5, pady=5)

item_counts_treeview = ttk.Treeview(item_counts_frame, columns=("receipt_number", "item_count"), show="headings")
item_counts_treeview.heading("receipt_number", text="Receipt number")
item_counts_treeview.heading("item_count", text="Item count")
item_counts_treeview.pack(side="left", fill="both", expand=True)

def update_treeviews():
    receipt_number, item_data = list(items_out.items())[-1]  # Get the last added item
    customer_name = item_data['customer_name']
    item_name = item_data['item_name']
    item_count = item_data['item_count']
    items_out_treeview.insert("", tk.END, values=(receipt_number, customer_name, item_name))
    item_counts_treeview.insert("", tk.END, values=(receipt_number, item_count))
def remove_item():
    selected_item = items_out_treeview.focus()
    if selected_item:
        receipt_number = items_out_treeview.item(selected_item)['values'][0]
        if receipt_number in items_out:
            item_name = items_out[receipt_number]['item_name']
            customer_name = items_out[receipt_number]['customer_name']
            item_count = items_out[receipt_number]['item_count']
            del items_out[receipt_number]
            status_label.config(
                text=f"{item_count} {item_name}(s) returned by {customer_name}. Receipt number {receipt_number} removed from items out list.")
            update_treeviews()
        else:
            status_label.config(text="Receipt number not found in items out list.")
    else:
        status_label.config(text="Please select a row in the Treeview.")

root.mainloop() 